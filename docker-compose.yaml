version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: data_cleansing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_MULTIPLE_DATABASES: data_cleansing,airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./ddl.sql:/docker-entrypoint-initdb.d/01-ddl.sql
      - ./init-databases.sh:/docker-entrypoint-initdb.d/02-init-databases.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - data-network

  airflow-init:
    image: apache/airflow:2.7.0
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://postgres:password@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=dW8VSIEiY1mJQGhfNyn9PO0k5MBUBzI1F06iWgXjGzs=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Jakarta
      - _AIRFLOW_DB_MIGRATE=true
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
    volumes:
      - ./dags:/opt/airflow/dags
      - ./source:/opt/airflow/source:rw
      - ./target:/opt/airflow/target:rw
      - ./logs:/opt/airflow/logs:rw
      - ./backup:/opt/airflow/backup:rw
      - ./archive:/opt/airflow/archive:rw
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "
        airflow db init &&
        airflow users create --username admin --firstname Admin --lastname User --role Admin --email admin@example.com --password admin &&
        echo 'Initialization complete'
      "
    networks:
      - data-network
    restart: "no"

  airflow-webserver:
    image: apache/airflow:2.7.0
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://postgres:password@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=dW8VSIEiY1mJQGhfNyn9PO0k5MBUBzI1F06iWgXjGzs=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Jakarta
    volumes:
      - ./dags:/opt/airflow/dags
      - ./source:/opt/airflow/source:rw
      - ./target:/opt/airflow/target:rw
      - ./logs:/opt/airflow/logs:rw
      - ./backup:/opt/airflow/backup:rw
      - ./archive:/opt/airflow/archive:rw
    ports:
      - "8080:8080"
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: webserver
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - data-network
    restart: unless-stopped

  airflow-scheduler:
    image: apache/airflow:2.7.0
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://postgres:password@postgres:5432/airflow
      - AIRFLOW__CORE__FERNET_KEY=dW8VSIEiY1mJQGhfNyn9PO0k5MBUBzI1F06iWgXjGzs=
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__DEFAULT_TIMEZONE=Asia/Jakarta
    volumes:
      - ./dags:/opt/airflow/dags
      - ./source:/opt/airflow/source:rw
      - ./target:/opt/airflow/target:rw
      - ./logs:/opt/airflow/logs:rw
      - ./backup:/opt/airflow/backup:rw
      - ./archive:/opt/airflow/archive:rw
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    command: scheduler
    networks:
      - data-network
    restart: unless-stopped

  data-cleaner:
    build: .
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: data_cleansing
      DB_USER: postgres
      DB_PASSWORD: password
    volumes:
      - ./source:/source:rw
      - ./target:/target:rw
      - ./logs:/app/logs:rw
    networks:
      - data-network

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - data-network

networks:
  data-network:
    name: data-network
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: